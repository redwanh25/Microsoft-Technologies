//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8793
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace CIS.Lib.Utils {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OrcaWebServicesSoap", Namespace="http://tempuri.org/")]
    public partial class OrcaWebServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOrcaMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateOrcansOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        /// <remarks/>
        public OrcaWebServices() {
            this.Url = "http://eos/BFWS/OrcaWebServices.asmx";
        }
        
        /// <remarks/>
        public event GetOrcaMembersCompletedEventHandler GetOrcaMembersCompleted;
        
        /// <remarks/>
        public event AuthenticateOrcansCompletedEventHandler AuthenticateOrcansCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrcaMembers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOrcaMembers(string strCriteria, string strOrderBy) {
            object[] results = this.Invoke("GetOrcaMembers", new object[] {
                        strCriteria,
                        strOrderBy});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrcaMembers(string strCriteria, string strOrderBy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrcaMembers", new object[] {
                        strCriteria,
                        strOrderBy}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetOrcaMembers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrcaMembersAsync(string strCriteria, string strOrderBy) {
            this.GetOrcaMembersAsync(strCriteria, strOrderBy, null);
        }
        
        /// <remarks/>
        public void GetOrcaMembersAsync(string strCriteria, string strOrderBy, object userState) {
            if ((this.GetOrcaMembersOperationCompleted == null)) {
                this.GetOrcaMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrcaMembersOperationCompleted);
            }
            this.InvokeAsync("GetOrcaMembers", new object[] {
                        strCriteria,
                        strOrderBy}, this.GetOrcaMembersOperationCompleted, userState);
        }
        
        private void OnGetOrcaMembersOperationCompleted(object arg) {
            if ((this.GetOrcaMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrcaMembersCompleted(this, new GetOrcaMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticateOrcans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthenticateOrcans(string userName, string password) {
            object[] results = this.Invoke("AuthenticateOrcans", new object[] {
                        userName,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuthenticateOrcans(string userName, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AuthenticateOrcans", new object[] {
                        userName,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAuthenticateOrcans(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateOrcansAsync(string userName, string password) {
            this.AuthenticateOrcansAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateOrcansAsync(string userName, string password, object userState) {
            if ((this.AuthenticateOrcansOperationCompleted == null)) {
                this.AuthenticateOrcansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOrcansOperationCompleted);
            }
            this.InvokeAsync("AuthenticateOrcans", new object[] {
                        userName,
                        password}, this.AuthenticateOrcansOperationCompleted, userState);
        }
        
        private void OnAuthenticateOrcansOperationCompleted(object arg) {
            if ((this.AuthenticateOrcansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateOrcansCompleted(this, new AuthenticateOrcansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld(string strName, string strMessage) {
            object[] results = this.Invoke("HelloWorld", new object[] {
                        strName,
                        strMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHelloWorld(string strName, string strMessage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HelloWorld", new object[] {
                        strName,
                        strMessage}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndHelloWorld(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync(string strName, string strMessage) {
            this.HelloWorldAsync(strName, strMessage, null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(string strName, string strMessage, object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[] {
                        strName,
                        strMessage}, this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetOrcaMembersCompletedEventHandler(object sender, GetOrcaMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrcaMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrcaMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AuthenticateOrcansCompletedEventHandler(object sender, AuthenticateOrcansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateOrcansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateOrcansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
