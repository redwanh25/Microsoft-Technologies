@model IEnumerable<InputFromExcelFile.Models.ContestContestant>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("InputFromExcelFile", "ContestContestants", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="col-xs-8 col-lg-4 col-md-5">
        <input id="ExcelFileInput" type="file" name="excelFile" class="form-control" required />
    </div>
    <div class="col-xs-4 col-lg-2 col-md-2">
        <input id="ExcelFileInputButton" type="submit" value="Input From Excel File" class="btn btn-warning btn-sm" />
    </div>
}
<br /><br />
<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div class="col-xs-12 col-sm-6">
    <h4>Select Number of Rows</h4>
    <div class="form-group">
        <select name="state" id="maxRows" class="form-control" style="width:150px;">
            <option value="5000">Show All</option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="15">15</option>
            <option value="20">20</option>
            <option value="50">50</option>
            <option value="75">75</option>
            <option value="100">100</option>
        </select>
    </div>
</div>

<table class="table table-hover text-center fixed" id="mytable">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ContestTimeSolve)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UpSolve)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ContestantsTable.ContestantsName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ContestTable.ContestName)
        </th>
        <th></th>
    </tr>

    @*@foreach (var item in Model.OrderBy(per => per.ContestTable.Id))*@
    @*@foreach (var item in Model.OrderBy(per => per.ContestantsTable.Id))*@
    @foreach (var item in Model.OrderBy(per => per.ContestTable.Id).ThenBy(per => per.ContestantsTable.Id))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ContestTimeSolve)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpSolve)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContestantsTable.ContestantsName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContestTable.ContestName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

<script type="text/javascript">
    $('#ExcelFileInputButton').click(function () {
        var extension = $('#ExcelFileInput').val().split('.').pop().toLowerCase();
        if ($('#ExcelFileInput').val() != '') {
            if ($.inArray(extension, ['xls', 'xlsx', 'csv']) == -1) {
                //alert('Sorry, You can only upload an image.');
                swal("Sorry!", "You can only upload a Excel File!", "error");
                return false;
            }
        }
    });
</script>


<script type="text/javascript">
    var table = '#mytable'
    $('#maxRows').on('change', function () {
        $('.pagination').html('');
        var trnum = 0
        var maxRows = parseInt($(this).val())
        var totalRows = $(table + ' tbody tr').length

        // hide column 5 select korle 5 ta row show korbe
        $(table + ' tr:gt(0)').each(function () {
            trnum++
            if (trnum > maxRows) {
                $(this).hide()
            }
            if (trnum <= maxRows) {
                $(this).show()
            }
        })

        // show pagination
        if (totalRows > maxRows) {
            var pagenum = Math.ceil(totalRows / maxRows);
            //$('.pagination').append('<li><a href="#">&laquo;</a></li>').show();
            for (var i = 1; i <= pagenum;) {
                $('.pagination').append('<li data-page="' + i + '">\<span>' + i++ + '<span class="sr-only">(current)</span></span>\</li>').show()
            }
            //$('.pagination').append('<li><a href="#">&raquo;</a></li>').show();
        }
        // first value ta active rakhe always
        $('.pagination li:first-child').addClass('active')

        // page a click korar pore column kore show kore
        $('.pagination li').on('click', function () {
            var pageNum = $(this).attr('data-page')
            var trIndex = 0;
            $('.pagination li').removeClass('active')
            $(this).addClass('active');
            $(table + ' tr:gt(0)').each(function () {
                trIndex++;
                if (trIndex > (maxRows * pageNum) || trIndex <= ((maxRows * pageNum) - maxRows)) {
                    $(this).hide();
                } else {
                    $(this).show();
                }
            })
        })
    })
    // get serial no
    $(function () {
        $('table tr:eq(0)').prepend('<td class="text-center">No</td>')
        var id = 0;
        $('table tr:gt(0)').each(function () {
            id++
            $(this).prepend('<td style="font-size:19px">' + id + '</td>')
        })
    })
</script>