@model IEnumerable<DIU_CPC_BlueDivision.Models.ContestContestant>
@using DIU_CPC_BlueDivision.Models;
@using System.Text;

@{
    ViewBag.Title = "Index";
}

@{
    ContestAndContestantsEntities db = new ContestAndContestantsEntities();
    List<string> list = new List<string>();

    int numberOfContestants = ViewBag.count;
    int cTrackId = ViewBag.contestTrackerId;
}

<style>
    table.fixed td {
        overflow: hidden;
    }

    #mytable.fixed td:nth-of-type(2) {
        min-width: 300px;
    }

    tr td {
        padding: 0 !important;
    }

    span.glyphicon-pencil {
        cursor: pointer;
        font-size: 10px;
    }

    .padding-0 {
        padding-right: 0;
        padding-left: 0;
    }
</style>

<br /><br />
<h2>Index</h2>

<div class="row">
    <div class="col-xs-12">
        <div class="pull-right">
            <button class="btn btn-success" type="button" onclick="location.href='@Url.Action("Index", "ContestSheetExcelFormatView" , new { cTrackerId=cTrackId })'"><span class="glyphicon glyphicon-edit"></span> ContestSheetExcelFormatView </button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-12 col-sm-6">
        <h4>Select Number of Rows</h4>
        <div class="form-group">
            <select name="state" id="maxRows" class="form-control" style="width:150px;">
                <option value="50000">Show All</option>
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="15">15</option>
                <option value="20">20</option>
                <option value="30">30</option>
            </select>
        </div>
    </div>
</div>
<br />

<div class="row">
    <div class="col-md-4 col-sm-5 col-xs-5 padding-0">
        <div style="overflow-x:auto;">
            <table class="table table-hover table-bordered table-responsive table-striped fixed text-center" style="font-size:16px;" id="mytable">
                <tr class="success text-center" style="font-weight: bold;">
                    <td></td>
                    <td style="color:red">Standing</td>
                </tr>
                @*
                    <tr class="success">
                        <td></td>
                        <td></td>
                        @for (int i = 0; i < numberOfContestants; i++)
                        {
                        <td colspan="3">
                            @Html.DisplayNameFor(model => model.ContestantsTable.ContestantsName)
                        </td>
                        }
                    </tr>*@
                <tr class="success">
                    <td></td>
                    <td>
                        @Html.DisplayNameFor(model => model.ContestTable.ContestName)
                    </td>
                </tr>
                <tr class="success">
                    <td></td>
                </tr>
                @{
                    List<ContestTable> conList = db.ContestTables.Where(per => per.ContestTrackerId == cTrackId).ToList();
                }
                @foreach (var item1 in conList)
                {
                    <tr>
                        <td>
                            <a target="_blank" href="@item1.ContestLink">@item1.ContestName</a>
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
    <div class="col-md-8 col-sm-7 col-xs-7 padding-0">
        <div style="overflow-x:auto;">
            <table class="table table-hover table-bordered table-responsive table-striped fixed text-center" style="font-size:16px;" id="mytable1">
                <tr class="success text-center" style="font-weight: bold;">
                    @{
                        int count = Convert.ToInt32(db.ContestantsTables.Where(per => per.ContestTrackerId == cTrackId).Count());

                        for (int i = 1; i <= count; i++)
                        {
                            <td colspan="3" style="color:red;">@i</td>
                        }
                    }
                </tr>
                @*
                    <tr class="success">
                        <td></td>
                        <td></td>
                        @for (int i = 0; i < numberOfContestants; i++)
                        {
                        <td colspan="3">
                            @Html.DisplayNameFor(model => model.ContestantsTable.ContestantsName)
                        </td>
                        }
                    </tr>*@
                <tr class="success">
                    @foreach (var cName in db.ContestantsTables.Where(per => per.ContestTrackerId == cTrackId).ToList()
                    .OrderByDescending(per => per.Score).ThenByDescending(per => per.SolveCountOnsite).ThenByDescending(per => per.AverageSolvePerContest)
                    .ThenByDescending(per => per.TotalParticipation).ThenByDescending(per => per.TotalSolve))
                    {
                        {
                            string str = cName.ContestantsName.ToString();
                            if (str.Length > 13)
                            {
                                StringBuilder sb = new StringBuilder(str);
                                sb.Remove(13, sb.Length - 13);
                                str = sb.ToString() + "...";
                            }
                            <td colspan="3">
                                @str
                            </td>
                        }

                    }
                </tr>
                <tr class="success">
                    @for (int i = 0; i < numberOfContestants; i++)
                    {
                        @*
                            <td>
                                ContestantName
                            </td>*@
                        <td>
                            Onsite
                        </td>
                        <td>
                            @Html.DisplayNameFor(model => model.UpSolve)
                        </td>
                        <td>Action</td>

                    }
                </tr>

                @{
                    List<ContestTable> conList1 = db.ContestTables.Where(per => per.ContestTrackerId == cTrackId).ToList();
                }
                @foreach (var item1 in conList1)
                {
                    <tr style="height:28px">

                        @foreach (var item in Model.OrderByDescending(per => per.ContestantsTable.Score)
                        .ThenByDescending(per => per.ContestantsTable.SolveCountOnsite)
                        .ThenByDescending(per => per.ContestantsTable.AverageSolvePerContest)
                        .ThenByDescending(per => per.ContestantsTable.TotalParticipation)
                        .ThenByDescending(per => per.ContestantsTable.TotalSolve))
                        {
                            if (item1.Id == item.ContestTable.Id)
                            {
                                @*<td> @Html.DisplayFor(modelItem => item.ContestantsTable.ContestantsName) </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.ContestTimeSolve)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UpSolve)
                                </td>
                                <td>
                                    @*<span class="glyphicon glyphicon-pencil" onclick="location.href='@Url.Action("Edit", "ContestContestants", new { id = item.Id })'"></span>*@
                                    @*@Html.ActionLink("Edit", "Edit", new { id = item.Id })*@
                                    <span class="glyphicon glyphicon-pencil" onclick="window.open('@Url.Action("Edit", "ContestContestants", new { id = item.Id })', '_blank', 'toolbar=yes,scrollbars=yes,resizable=yes,top=0,left=0,width=400,height=600')"></span>
                                </td>

                                @*<td> @Html.DisplayFor(modelItem => item.ContestTable.ContestName) </td>*@
                            }

                        }
                    </tr>
                }

            </table>
        </div>
    </div>
</div>

<br />
<div class="pagination-container" align="center">
    <nav>
        <ul class="pagination"></ul>
    </nav>
</div>

<script type="text/javascript">
    var table = '#mytable'
    var table1 = '#mytable1'
    $('#maxRows').on('change', function () {
        $('.pagination').html('');
        var trnum = 0;
        var maxRows = parseInt($(this).val())
        var totalRows = $(table + ' tbody tr').length

        // hide column 5 select korle 5 ta row show korbe
        $(table + ' tr:gt(2)').each(function () {
            trnum++
            if (trnum > maxRows) {
                $(this).hide()
            }
            if (trnum <= maxRows) {
                $(this).show()
            }
        })
        trnum = 0;
        // hide column 5 select korle 5 ta row show korbe
        $(table1 + ' tr:gt(2)').each(function () {
            trnum++
            if (trnum > maxRows) {
                $(this).hide()
            }
            if (trnum <= maxRows) {
                $(this).show()
            }
        })

        // show pagination
        if (totalRows > maxRows) {
            var pagenum = Math.ceil(totalRows / maxRows);
            //$('.pagination').append('<li><a href="#">&laquo;</a></li>').show();
            for (var i = 1; i <= pagenum;) {
                $('.pagination').append('<li data-page="' + i + '">\<span>' + i++ + '<span class="sr-only">(current)</span></span>\</li>').show()
            }
            //$('.pagination').append('<li><a href="#">&raquo;</a></li>').show();
        }
        // first value ta active rakhe always
        $('.pagination li:first-child').addClass('active')

        // page a click korar pore column kore show kore
        $('.pagination li').on('click', function () {
            var pageNum = $(this).attr('data-page')
            var trIndex = 0;
            $('.pagination li').removeClass('active')
            $(this).addClass('active');
            $(table + ' tr:gt(2)').each(function () {
                trIndex++;
                if (trIndex > (maxRows * pageNum) || trIndex <= ((maxRows * pageNum) - maxRows)) {
                    $(this).hide();
                } else {
                    $(this).show();
                }
            })
            trIndex = 0;
            $(table1 + ' tr:gt(2)').each(function () {
                trIndex++;
                if (trIndex > (maxRows * pageNum) || trIndex <= ((maxRows * pageNum) - maxRows)) {
                    $(this).hide();
                } else {
                    $(this).show();
                }
            })
        })
    })
    // get serial no
    //$(function () {
    //    $('table tr:eq(0)').prepend('<td class="text-center"></td>')
    //    var id = 0;
    //    $('table tr:gt(0)').each(function () {
    //        id++
    //        if (id > 10) {
    //            $(this).prepend('<td style="font-size:19px"  class="text-center">' + parseInt(parseInt(id)-10) + '</td>')
    //        }
    //        else if (id == 10) {
    //            $(this).prepend('<td style="font-size:19px"  class="text-center">No</td>')
    //        }
    //        else {
    //            $(this).prepend('<td style="font-size:19px"  class="text-center"></td>')
    //        }

    //    })
    //})
    $(function () {
        $('#mytable tr:eq(2)').prepend('<td class="text-center">No</td>')
        var id = 0;
        $('#mytable tr:gt(2)').each(function () {
            id++
            $(this).prepend('<td style="font-size:19px">' + id + '</td>')
        })
    })
</script>

@*@Html.ActionLink("Details", "Details", new { id = item.Id }) |
    @Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
