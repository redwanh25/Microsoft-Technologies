@model DIU_CPC_BlueDivision.Models.Blog_tbl

@{
    /**/

    /**/

    ViewBag.Title = "Create";
}
<script src="~/jquery_Bootstrap_SweetAlert_IHover_Animation/SweetAlert/sweetalert.min.js"></script>

<br /><br />
<div class="container">
    <h2>Create</h2>
    @using (Html.BeginForm("Create", "BlogPost", FormMethod.Post, new { encType = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Blog_tbl</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextAreaFor(model => model.Title, new { @rows = 2, @class = "form-control", @placeholder = "Enter Your Post Title" })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.BlogImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @*@Html.EditorFor(model => model.BlogImage, new { htmlAttributes = new { @class = "form-control" } })*@
                    <input type="file" id="image1" name="image1" class="form-control" />
                    @Html.ValidationMessageFor(model => model.BlogImage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextAreaFor(model => model.Text, new { @rows = 5, @class = "form-control", @placeholder = "Enter Your Text" })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="submitId" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @*@Html.ActionLink("Back to List", "Index")*@
        <a class="btn btn-default" href="@Url.Action("Index", "BlogPost")">Back to List</a>
    </div>
</div>
<script type="text/javascript">
    $('#submitId').click(function () {
        var extension = $('#image1').val().split('.').pop().toLowerCase();
        if ($('#image1').val() == '') {
            return true;
        }
        else if ($.inArray(extension, ['gif', 'png', 'jpg', 'jpeg', 'bmp']) == -1) {
            //alert('Sorry, You can only upload an image.');
            swal("Sorry!", "You can only upload an image!", "error");
            return false;
        }
    });
</script>